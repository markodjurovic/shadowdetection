#summary Shadow detection on digital images.

= Aditional info =

  * Project can be traced at: [http://www.ohloh.net/p/shadowdetection ohloh.net], thanks guys for this :).

<wiki:gadget url="http://www.ohloh.net/p/716824/widgets/project_thin_badge.xml" height="52" border="0"/>

  * *Project uses modified libsvm project: [http://www.csie.ntu.edu.tw/~cjlin/libsvm/], thanks to authors on this great and reliable library.*
= Current version =
  Current version is: 0.6.0
  
  About version 0.2.0 please see: [http://code.google.com/p/shadowdetection/wiki/Version020 ver0.2.0]
= Contents =
  * [ShadowDetection#News News]
  * [ShadowDetection#Requirements Requirements]
  * [ShadowDetection#Config Config] 
  * [ShadowDetection#Future Future] 
  * [ShadowDetection#Usage Usage]
  * [ShadowDetection#Batch_file Batch file]
  * [ShadowDetection#Optimisation Optimisation]
  * [ShadowDetection#Results Results] 
  * [ShadowDetection#What_has_been_done What has been done]
  * [ShadowDetection#Make_your_model Make your model]
  * [ShadowDetection#Expand_with_new_features Expand with new features]
  * [ShadowDetection#Contact Contact]  
= News =
  * *Unfortunately no more access to Tesla card, so any help of providing testing on Tesla cards will be great.*
  * Mac OSX builds abandoned for now.
  * Version 0.6.0
    # New prediction based on logistic regression
    # Fixed false detected shadow pixels on lightening areas
    # Partially fixed false detected in sky areas
    # Sky detection algorithm
    # Support for making prediction models
    # New tools in order to make new models
    # First version of API/Framework for general pixel categorsation
    # Abandoned Mac OSX support for now, because of issues with OpenCL
  * Version 0.2.0
    # Fixed issues with NU-SVR prediction (07/24/14)
    # For now paused with svm training process parallelization (07/24/14)
    # Added support for SVR trainings (07/14/14)
    # Done more svm training optimisation (07/12/14)
    # Fixed memory release issue (07/12/14)
    # Added comparation performances char (_see: [ShadowDetection#Optimisation Optimisation]_) (07/09/14) 
    # Finished optimizing for svm predict. Target hardware was GPU. Results very good, can be seen here: [http://code.google.com/p/shadowdetection/wiki/PredictionPerformances Performances] (07/08/14)
    # Fixed issue with non OpenCL builds (07/08/14)
    # Uploaded model file (_see: [http://code.google.com/p/shadowdetection/wiki/ShadowDetection#SVM_Prediction SVM Predictions] for instructions_) (07/02/14)
    # Ability to use svm prediction for more accurate results, see: [http://code.google.com/p/shadowdetection/wiki/WithSVM With SVM] (07/02/14)
    # Parallelized svm prediction (on image level) with OpenCL (still not optimal )(07/01/14)
    # Removed some memory leaks (07/01/14)
    # Started using JAVA for external tools (07/01/14)
    # Started using first "dummy" version of memory manager (07/01/14)
    # Added tool for making training sets (07/01/14)
    # For non OpenCL builds some parts of svm parallelized with OpenMP (07/01/14)
  * Version 0.1.0
    # Now works with AMD GPUs, tested on R9 270 (06/24/14)
    # Libsvm training OpenCL parallelization stopped on current level, will be continued later (06/24/14)
    # Tested with Intel CPUs (06/18/14)
    # Removed OpenMP support from Mac and OpenCL builds (06/14/14)
    # Fixed issue with save binary on Mac (06/08/14)
    # Fixed load precompiled binary for AMD CPUs (06/07/14)
    # Added support for MacOSX (06/07/14)
    # OpenCL processing switched to OpenCV2 (06/06/14)
    # Fixed issue with multiple OpenCL platforms installed (06/04/14)
    # Added OpenCL support for AMD CPUs (06/04/14)
    # Added OpenCL processing support (see [ShadowDetection#Requirements Requirements])    
    # Added batch processing (see [ShadowDetection#Config Config])
    # Added configuration (see [ShadowDetection#Config Config])    
= Requirements =
  == Supported operating systems ==
     * Linux 64 bit     
  == Supported CPUs ==
     * x86_64
  == Supported image formats ==
     * jpeg
     * tiff
     * png
     * bmp
  == Required libraries ==
     * libjpeg and dev ( [http://libjpeg.sourceforge.net libjpeg] )
     * libtiff and dev ( [http://www.libtiff.org/ libtiff] )
     * libpng and dev  ( [http://www.libpng.org/pub/png/libpng.html libpng] )
     * OpenCV 2.4.9 or above (if openCV is installed with different prefix than /usr/local then must set adequate include and lib paths)
     * make
     * gcc
     * g++
     * libgomp (_for linux systems_)
     _Notice: Some libraries have them own requirements_
  == SVM Prediction ==
     * For SVM prediction you need model file. It candownloaded from: [http://www.mediafire.com/download/3dbj738o4wi4z4g/bigModel_RemovedThree.model.gz model]. Gunzip it to root dir of project. For enabling/disabling SVM prediction see config section: [ShadowDetection#Config Config]

    _Notice: Old model file is not compatible with version 0.6.0_ 
  == OpenCL ==
    === Supported device hardware ===
        * NVIDIA GeForce 600 series or above
        * NVIDIA Tesla K series
        * AMD CPUs
        * AMD GPUs series R9
        * Intel CPUs (works even with AMD-APP-SDK-v2.9)
          _Notice: May work on some other NVIDIA cards than specified but it is not tested, for AMD cards also may work with earlier models but not tested_        
    === Supported host hardware ===
        * Intel CPUs
        * AMD CPUs        
    === Required software ===
      ==== NVIDIA GPUs ====
        * Latest NVIDIA OpenCL capable drivers
        * NVIDIA CUDA Toolkit v6 (if cuda toolkit is installed at different location than /usr/local/cuda-6.0/ then must set adequate lib and include paths)
      ==== AMD and Intel CPUs ====
        * AMD-APP-SDK-v2.9 (if SDK installed at different location than /opt/AMDAPP/ then must set adequate lib and include paths)
      ==== AMD GPUs ====
        * AMD Catalyst drivers ver 14.10 or above     
      * OpenCV built with WITH_OPENCL turned ON
          [http://i969.photobucket.com/albums/ae180/markodjurovic/shadowdetection/opencv_zpsb0a30251.png]
= Config =
Please see: [http://code.google.com/p/shadowdetection/wiki/ConfigurationFile Configuration file]
= Usage =
  == Build ==
    === NetBeans IDE ===
      This is netbeans 8.0 project. If you are using this version or above just open it from File->Open Project. If required dependecies are not installed at default locations, you got to set adequate include and lib dirs in project properties.
    === Command line ===
      * Configurations are: Debug, Release, DebugOpenCL, ReleaseOpenCL, DebugOpenCL_AMD, ReleaseOpenCL_AMD.
        make usage:
{{{
Makefile Usage:"
	make [CONF=<CONFIGURATION>] [SUB=no] build"
	make [CONF=<CONFIGURATION>] [SUB=no] clean"
	make [SUB=no] clobber"
	make [SUB=no] all"
	make help"
}}}
        OpenCL builds with no extension (DebugOpenCL and ReleaseOpenCL) are dedicated to NVIDIA platform
     * If required dependecies are not insatlled at default locations, you got to set adequate lib and include dirs in make files.
  == Use instructions ==
    * After successful build you will have appropriate executables.
    * OpenCL executables are using openCL in processing, other not.
    * Set configuration file ( see [ShadowDetection#Config Config] )
    * Call executable from root dir:
      # If use batch with parameter which indicates batch processing file (see [ShadowDetection#Batch_file Batch file] ). Example:
{{{
./dist/ReleaseOpenCL/GNU+CUDA-Linux-x86/shadowdetection list.csv
}}} 
      # If not using batch processing with input and output paramaters. Example:
{{{
./dist/ReleaseOpenCL/GNU+CUDA-Linux-x86/shadowdetection 0.jpg out.jpg
}}}
    * Additional parameters -help and -list. Help will provide link to this wiki page. For "openCL" builds -list will list all platforms and devices, example:
{{{
$ ./dist/ReleaseOpenCL_AMD/GNU-Linux-x86/shadowdetection -list
Found 2 platforms.
=============
Platform name: AMD Accelerated Parallel Processing
Found 1 devices
Device 0 name: AMD Athlon(tm) II X4 651 Quad-Core Processor
=============
Platform name: NVIDIA CUDA
Error: clGetDeviceIDs(-1)
Platform not supported by this build
SHADOW_OTHER clGetDeviceIDs
=============
}}}

= Batch file =
Batch file is text file composed of lines. Each line has TAB separated values for input and output files. Example:
{{{
0.jpg	shadow01.jpg
5.jpg	shadow51.jpg
camel.jpg	shadowcamel1.jpg
deca.png	shadowdeca1.jpg
sh.jpg	shadowsh1.jpg
}}}
= Future =
  == Done == 
    * ~~Complete switch to OpenCV C++ API~~
    * ~~MacOSX support~~
    * ~~Use precompiled openCL kernels~~
    * ~~Support to use AMD CPUs in openCL processing~~
    * ~~Parallelize libsvm training with OpenCL~~
    * ~~Support to use Intel CPUs in openCL processing~~
    * ~~AMD graphic cards support~~
    * ~~Parallelize libsvm predict on image level~~
    * ~~New options in config file due to add possibility to configure libsvm~~
    * ~~Improve accuracy with SVM~~
    * ~~Provide model file~~
    * ~~Switch to single float precision in svm prediction~~
    * ~~Update documentation~~
    * ~~Add checks for start parameters~~
    * ~~Performance comparation charts (parallelized vs. non-parallelized)~~
    * ~~Improve shadow detection with new techniques~~
  == Very soon ==    
    * Parallel "regression prediction"
    * More API interfaces which will allow to extend functionality.
    * General pixel categorisation framework (in version 1.0.0)
    * API documentation (in version 1.0.0)
  == Soon ==        
    * configure script (in version 1.0.0)
    * Improve accuracy with machine learning (in version 1.0.0)
  == Later ==   
    * Windows and Visual Studio support.
    * Return Mac OSX builds.
= Optimisation =
  For performances and explanantion of optimisation techniques please see: [http://code.google.com/p/shadowdetection/wiki/PredictionPerformances Prediction Performances]
= Results =
  Please see: [http://code.google.com/p/shadowdetection/wiki/Results Results]
= What_has_been_done =
  Please see: [http://code.google.com/p/shadowdetection/wiki/WhatHasBeenDone What has been done]
= Make_your_model =
  Please see: [http://code.google.com/p/shadowdetection/wiki/MakeYourModel Make your model]
= Expand_with_new_features =
  Please see: [http://code.google.com/p/shadowdetection/wiki/ExpandWithNewFeatures Expand with new features]
= Contact =
  
  For any questions, suggestions, issues notifications, etc. please contact markodjurovic@yahoo.com