#summary Shadow detection on digital images.

= Contents =
  * [ShadowDetection#News News]
  * [ShadowDetection#Requirements Requirements]
  * [ShadowDetection#Config Config] 
  * [ShadowDetection#Future Future] 
  * [ShadowDetection#Usage Usage]
  * [ShadowDetection#Batch_file Batch file]
  * [ShadowDetection#Contact Contact] 
= News =
  * Version 0.2.0
    # Uploaded model file (_see: [http://code.google.com/p/shadowdetection/wiki/ShadowDetection#SVM_Prediction SVM Predictions] for instructions_) (07/02/14)
    # Ability to use svm prediction for more accurate results, see: [http://code.google.com/p/shadowdetection/wiki/WithSVM With SVM] (07/02/14)
    # Parallelized svm prediction with OpenCL (07/01/14)
    # Removed some memory leaks (07/01/14)
    # Started using JAVA for external tools (07/01/14)
    # Started using first "dummy" version of memory manager (07/01/14)
    # Added tool for making training sets (07/01/14)
    # For non OpenCL builds some parts of svm parallelized with OpenMP (07/01/14)
  * Version 0.1.0
    # Now works with AMD GPUs, tested on R9 270 (06/24/14)
    # Libsvm training OpenCL parallelization stopped on current level, will be continued later (06/24/14)
    # Tested with Intel CPUs (06/18/14)
    # Removed OpenMP support from Mac and OpenCL builds (06/14/14)
    # Fixed issue with save binary on Mac (06/08/14)
    # Fixed load precompiled binary for AMD CPUs (06/07/14)
    # Added support for MacOSX (06/07/14)
    # OpenCL processing switched to OpenCV2 (06/06/14)
    # Fixed issue with multiple OpenCL platforms installed (06/04/14)
    # Added OpenCL support for AMD CPUs (06/04/14)
    # Added OpenCL processing support (see [ShadowDetection#Requirements Requirements])    
    # Added batch processing (see [ShadowDetection#Config Config])
    # Added configuration (see [ShadowDetection#Config Config])    
= Requirements =
  == Supported operating systems ==
     * Linux 64 bit
     * OS X Maverics
       _Notice: May work on older OS X systems, but only tested on Maverics_
  == Supported CPUs ==
     * x86_64
  == Supported image formats ==
     * jpeg
     * tiff
     * png
     * bmp
  == Required libraries ==
     * libjpeg and dev ( [http://libjpeg.sourceforge.net libjpeg] )
     * libtiff and dev ( [http://www.libtiff.org/ libtiff] )
     * libpng and dev  ( [http://www.libpng.org/pub/png/libpng.html libpng] )
     * OpenCV 2.4.9 or above (if openCV is installed with different prefix than /usr/local then must set adequate include and lib paths)
     * make
     * gcc
     * g++
     * libgomp (_for linux systems_)
     _Notice: Some libraries have them own requirements_
  == SVM Prediction ==
     * For SVM prediction you need model file. It candownloaded from: [http://www.mediafire.com/download/7a67h508fz5jtb1/bigModel.model.gz model]. Gunzip it to root dir of project. For enabling SVM prediction see config section: [ShadowDetection#Config Config] 
  == OpenCL ==
    === Supported device hardware ===
        * NVIDIA GeForce 600 series or above
        * NVIDIA Tesla K series
        * AMD CPUs
        * AMD GPUs series R9
        * Intel CPUs (works even with AMD-APP-SDK-v2.9)
          _Notice: May work on some other NVIDIA cards than specified but it is not tested, for AMD cards also may work with earlier models but not tested_
        * Macintosh platforms supported
    === Supported host hardware ===
        * Intel CPUs
        * AMD CPUs
        * Macintosh platform's CPUs supported
    === Required software ===
      ==== NVIDIA GPUs ====
        * Latest NVIDIA OpenCL capable drivers
        * NVIDIA CUDA Toolkit v6 (if cuda toolkit is installed at different location than /usr/local/cuda-6.0/ then must set adequate lib and include paths)
      ==== AMD and Intel CPUs ====
        * AMD-APP-SDK-v2.9 (if SDK installed at different location than /opt/AMDAPP/ then must set adequate lib and include paths)
      ==== AMD GPUs ====
        * AMD Catalyst drivers ver 14.10 or above
      ==== Macintosh ====
        * XCode command line tools
      * OpenCV built with WITH_OPENCL turned ON
          [http://i969.photobucket.com/albums/ae180/markodjurovic/shadowdetection/opencv_zpsb0a30251.png]
= Config =
  Configuration file is: ShadowDetectionConfig.xml and looks like this:
{{{
<?xml version="1.0" encoding="utf-8"?>
<QsConfig>
    <process>
        <UseBatch>
            false
        </UseBatch>
        <Training>
            <distribute0and1>
                true
            </distribute0and1>
        </Training>
        <Prediction>
            <modelFile>
                bigModel.model
            </modelFile>
            <usePrediction>
                false
            </usePrediction>
        </Prediction>        
    </process>
    <settings>        
        <openCL>            
            <UsePrecompiledKernels>
                false
            </UsePrecompiledKernels>            
            <platformid>
                0
            </platformid>
            <deviceid>
                0
            </deviceid>    
        </openCL>        
        <openMP>
            <threadNum>
                4
            </threadNum>
        </openMP>        
        <svm>            
            <!-- 0=C-SVC, 1=nu-SVC, 2=one-class, 3=epsilon-SVR, 4=nu-SVR -->
            <svm_type>
                0
            </svm_type>
            <!-- 0=linear, 1=polynomial, 2=radial basis function, 3=sigmoid, 4-not supported -->
            <kernel_type>
                2
            </kernel_type>
        </svm>        
    </settings>
</QsConfig>
}}}

  "process.UseBatch" variable should have true/false value. 
    * If it is true then specify file with list of images should be processed ( look [ShadowDetection#Usage Usage] )
    * If it is false then specify input image file and output file with extension

  "process.Training.distribute0and1" variable specifies if classes in svm training will be distributed or not

  "process.Prediction.modelFile" path to model file if svm prediction is used

  "process.Prediction.usePrediction" specifies whether or not to use svm prediction in detection

  "settings.openCL.platformid" specifies platform index used in openCL processing

  "settings.openCL.deviceid" specifies device index of selected platform used in openCL processing

  "settings.openCL.UsePrecompiledKernels" flag which indicates if use precompiled OpenCL kernel binaries (_Notice: currently affects only GPUs devices_)
  
  "settings.openMP.threadNum" determine number of threads used by OpenMP in non OpenCL builds

  "settings.svm.svm_type" specifies svm type used in creating model file (_see comment for more_)

  "settings.svm.kernel_type" specifies kernel type used in creating model file (_see comment for more_)

= Usage =
  == Build ==
    === NetBeans IDE ===
      This is netbeans 8.0 project. If you are using this version or above just open it from File->Open Project. If required dependecies are not installed at default locations, you got to set adequate include and lib dirs in project properties.
    === Command line ===
      * Configurations are: Debug, Release, DebugOpenCL, ReleaseOpenCL, DebugOpenCL_AMD, ReleaseOpenCL_AMD, DebugOpenCL_Mac, ReleaseOpenCL_Mac, Debug_Mac, Release_Mac.
        make usage:
{{{
Makefile Usage:"
	make [CONF=<CONFIGURATION>] [SUB=no] build"
	make [CONF=<CONFIGURATION>] [SUB=no] clean"
	make [SUB=no] clobber"
	make [SUB=no] all"
	make help"
}}}
     * If required dependecies are not insatlled at default locations, you got to set adequate lib and include dirs in make files.
  == Use instructions ==
    * After successful build you will have appropriate executables.
    * OpenCL executables are using openCL in processing, other not.
    * Set configuration file ( see [ShadowDetection#Config Config] )
    * Call executable from root dir:
      # If use batch with parameter which indicates batch processing file (see [ShadowDetection#Batch_file Batch file] ). Example:
{{{
./dist/ReleaseOpenCL/GNU+CUDA-Linux-x86/shadowdetection list.csv
}}} 
      # If not using batch processing with input and output paramaters. Example:
{{{
./dist/ReleaseOpenCL/GNU+CUDA-Linux-x86/shadowdetection 0.jpg out.jpg
}}}
    * Additional parameters -help and -list. Help will provide link to this wiki page. For "openCL" builds -list will list all platforms and devices, example:
{{{
$ ./dist/ReleaseOpenCL_AMD/GNU-Linux-x86/shadowdetection -list
Found 2 platforms.
=============
Platform name: AMD Accelerated Parallel Processing
Found 1 devices
Device 0 name: AMD Athlon(tm) II X4 651 Quad-Core Processor
=============
Platform name: NVIDIA CUDA
Error: clGetDeviceIDs(-1)
Platform not supported by this build
SHADOW_OTHER clGetDeviceIDs
=============
}}}

= Batch file =
Batch file is text file composed of lines. Each line has TAB separated values for input and output files. Example:
{{{
0.jpg	shadow01.jpg
5.jpg	shadow51.jpg
camel.jpg	shadowcamel1.jpg
deca.png	shadowdeca1.jpg
sh.jpg	shadowsh1.jpg
}}}
= Future =
  == Done == 
    * ~~Complete switch to OpenCV C++ API~~
    * ~~MacOSX support~~
    * ~~Use precompiled openCL kernels~~
    * ~~Support to use AMD CPUs in openCL processing~~
    * ~~Parallelize libsvm training with OpenCL~~
    * ~~Support to use Intel CPUs in openCL processing~~
    * ~~AMD graphic cards support~~
    * ~~Parallelize libsvm predict on image level~~
    * ~~New options in config file due to add possibility to configure libsvm~~
  == Very soon ==    
    * ~~Improve accuracy with SVM~~
    * ~~Provide model file~~
    * Switch to single float precision in svm prediction
    * Update documentation
    * ~~Add checks for start parameters~~
    * Performance comparations charts (parallelized vs. non-parallelized)
  == Soon ==
    * More libsvm training OpenCL parallelization especially optimisations for GPUs
    * More libsvm OpenMP parallelization
    * 32bit releases
    * configure script
    * Improve accuracy with machine learning
  == Later ==
    * Multi device OpenCL executions
    * Library builds
    * Windows and Visual Studio support
= Contact =
  
  For any questions, suggestions, issues notifications, etc. please contact markodjurovic@yahoo.com