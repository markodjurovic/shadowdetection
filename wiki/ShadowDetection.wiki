#summary Shadow detection on raster images.

= Contents =
  * [ShadowDetection#News News]
  * [ShadowDetection#Requirements Requirements]
  * [ShadowDetection#Config Config] 
  * [ShadowDetection#Future Future] 
  * [ShadowDetection#Usage Usage]
  * [ShadowDetection#Batch_file Batch file]
  * [ShadowDetection#Contact Contact] 
= News =
  * Version 0.1.0
    # Fixed issue with save binary on Mac (06/08/14)
    # Fixed load precompiled binary for AMD CPUs (06/07/14)
    # Added support for MacOSX (06/07/14)
    # OpenCL processing switched to OpenCV2 (06/06/14)
    # Fixed issue with multiple OpenCL platforms installed (06/04/14)
    # Added OpenCL support for AMD CPUs (06/04/14)
    # Added OpenCL processing support (see [ShadowDetection#Requirements Requirements])    
    # Added batch processing (see [ShadowDetection#Config Config])
    # Added configuration (see [ShadowDetection#Config Config])    
= Requirements =
  == Supported operating systems ==
     * Linux 64 bit
     * OS X Maverics
       _Notice: May work on older OS X systems, but only tested on Maverics_
  == Supported CPUs ==
     * x86_64
  == Supported image formats ==
     * jpeg
     * tiff
     * png
     * bmp
  == Required libraries ==
     * libjpeg and dev ( [http://libjpeg.sourceforge.net libjpeg] )
     * libtiff and dev ( [http://www.libtiff.org/ libtiff] )
     * libpng and dev  ( [http://www.libpng.org/pub/png/libpng.html libpng] )
     * OpenCV 2.4.9 or above (if openCV is installed with different prefix than /usr/local then must set adequate include and lib paths)
     * make
     * gcc
     * g++
     _Notice: Some libraries have them own requirements_
  == OpenCL ==
    === Supported device hardware ===
        * NVIDIA GeForce 600 series or above
        * NVIDIA Tesla K series
        * AMD CPUs
          _Notice: May work on some other NVIDIA cards than specified but it is not tested, also may work on Intel CPUs but not tested_ 
        * Macintosh platforms supported
    === Supported host hardware ===
        * Intel CPUs
        * AMD CPUs
        * On Macintosh all CPUs
    === Required software ===
      ==== NVIDIA GPUs ====
        * Latest NVIDIA OpenCL capable drivers
        * NVIDIA CUDA Toolkit v6 (if cuda toolkit is installed at different location than /usr/local/cuda-6.0/ then must set adequate lib and include paths)
      ==== AMD CPUs ====
        * AMD-APP-SDK-v2.9 (if SDK installed at different location than /opt/AMDAPP/ then must set adequate lib and include paths)
      ==== Macintosh ====
        * XCode command line tools
      * OpenCV built with WITH_OPENCL turned ON
          [http://i969.photobucket.com/albums/ae180/markodjurovic/opencv_zpsb0a30251.png]
= Config =
  Configuration file is: ShadowDetectionConfig.xml and looks like this:
{{{
<?xml version="1.0" encoding="utf-8"?>
<QsConfig>
    <process>
        <UseBatch>
            true
        </UseBatch>        
    </process>
    <settings>        
        <openCL>
            <UsePrecompiledKernels>
                true
            </UsePrecompiledKernels>             
            <platformid>
                0
            </platformid>
            <deviceid>
                0
            </deviceid>
            <mac>
                <useGPU>false</useGPU>
            </mac>        
        </openCL>        
    </settings>
</QsConfig>
}}}

  "process.openCL.UseBatch" variable should have true/false value. 
    * If it is true then specify file with list of images should be processed ( look [ShadowDetection#Usage Usage] )
    * If it is false then specify input image file and output file with extension

  "settings.openCL.platformid" specifies platform index used in openCL processing

  "settings.openCL.deviceid" specifies device index of selected platform used in openCL processing

  "settings.openCL.UsePrecompiledKernels" flag which indicates if use precompiled OpenCL kernel binaries (_Notice: currently affects only GPUs devices_)
  
  "settings.openCL.mac.useGPU" flag wich indicates what to use as device on MacOsX systems. If true GPU will be used, otherwise CPU will be used. On other systems than MacOsX flag value will be ignored.

= Usage =
  == Build ==
    === NetBeans IDE ===
      This is netbeans 8.0 project. If you are using this version or above just open it from File->Open Project. If required dependecies are not installed at default locations, you got to set adequate include and lib dirs in project properties.
    === Command line ===
      * Configurations are: Debug, Release, DebugOpenCL, ReleaseOpenCL, DebugOpenCL_AMD, ReleaseOpenCL_AMD.
        make usage:
{{{
Makefile Usage:"
	make [CONF=<CONFIGURATION>] [SUB=no] build"
	make [CONF=<CONFIGURATION>] [SUB=no] clean"
	make [SUB=no] clobber"
	make [SUB=no] all"
	make help"
}}}
     * If required dependecies are not insatlled at default locations, you got to set adequate lib and include dirs in make files.
  == Use instructions ==
    * After successful build you will have appropriate executables.
    * OpenCL executables are using openCL in processing, other not.
    * Set configuration file ( see [ShadowDetection#Config Config] )
    * Call executable
      # If use batch with parameter which indicates batch processing file (see [ShadowDetection#Batch_file Batch file] ). Example:
{{{
./dist/ReleaseOpenCL/GNU+CUDA-Linux-x86/shadowdetection list.csv
}}} 
      # If not using batch processing with input and output paramaters. Example:
{{{
./dist/ReleaseOpenCL/GNU+CUDA-Linux-x86/shadowdetection 0.jpg out.jpg
}}}
    * Additional parameters -help and -list. Help will provide link to this wiki page. For "openCL" builds 0list will list all platforms and devices, example:
{{{
$ ./dist/ReleaseOpenCL_AMD/GNU-Linux-x86/shadowdetection -list
Found 2 platforms.
=============
Platform name: AMD Accelerated Parallel Processing
Found 1 devices
Device 0 name: AMD Athlon(tm) II X4 651 Quad-Core Processor
=============
Platform name: NVIDIA CUDA
Error: clGetDeviceIDs(-1)
Platform not supported by this build
SHADOW_OTHER clGetDeviceIDs
=============
}}}

= Batch file =
Batch file is text file composed of lines. Each line has TAB separated values for input and output files. Example:
{{{
0.jpg	shadow01.jpg
5.jpg	shadow51.jpg
camel.jpg	shadowcamel1.jpg
deca.png	shadowdeca1.jpg
sh.jpg	shadowsh1.jpg
}}}
= Future =
  == Very soon ==    
    * AMD graphic cards support
    * ~~Complete switch to OpenCV C++ API~~
    * ~~MacOSX support~~
    * ~~Use precompiled openCL kernels~~
  == Soon ==
    * 32bit releases
    * Improve accuracy with SVM and machine learning
    * configure script
  == Later ==
    * Support to use ~~AMD~~ and Intel CPUs in openCL processing
    * Windows and Visual Studio support
= Contact =
  
  For any questions, suggestions, issues notifications, etc. please contact markodjurovic@yahoo.com